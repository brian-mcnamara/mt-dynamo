/* Copyright (c) 2019, Salesforce.com, Inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause.
 * For full license text, see LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause.
 */
package com.salesforce.dynamodbv2.mt.sharedtable.impl

import com.amazonaws.services.s3.AmazonS3ClientBuilder
import com.amazonaws.services.s3.model.CreateBucketRequest
import com.salesforce.dynamodbv2.mt.sharedtable.MtBackupManager
import org.junit.jupiter.api.Test
import kotlin.test.assertNotNull


internal class MtBackupManagerImplTest {

    @Test
    fun testBasicBackupCreate() {
        // TODO: Make this test operate against mock s3 in an autogenerated bucket
        // For now, this test uses a hardcoded bucket living on real s3
        assertNotNull(System.getenv("AWS_SECRET_ACCESS_KEY"), "Please specify AWS credentials to access bucket, or implement mock s3 for this test")
        assertNotNull(System.getenv("AWS_ACCESS_KEY_ID"))

        //first create test bucket if one does not exist
        val s3 = AmazonS3ClientBuilder.standard().withRegion("us-east-1").build()

        val bucket = "test-basic-backup-create"

        // Create bucket
        val createBucketRequest = CreateBucketRequest(bucket)
        s3.createBucket(createBucketRequest)

        val backupManager: MtBackupManager = MtBackupManagerImpl(s3.region.toAWSRegion().name, bucket)


        backupManager.createMtBackup("test-backup")
        assertNotNull(backupManager.getBackup("test-backup"))
    }
}